// Generated by CoffeeScript 1.3.3
(function() {
  var Presentation;

  Presentation = (function() {

    function Presentation() {
      var $document, $example, $mouth, $span, $square, $window, $zone, audio, top,
        _this = this;
      this.animation = '';
      $window = $(window);
      $document = $(document);
      $example = $('#example');
      $zone = $('#zone');
      $square = $('#square');
      $('pre code').not('[contentEditable]').each(function(i, elem) {
        return hljs.highlightBlock(elem);
      });
      top = $example.offset().top;
      $window.on('scroll', function(e) {
        if (window.pageYOffset > top - 54) {
          if (window.pageYOffset > 3141) {
            if (!$example.hasClass('bottom')) {
              return $example.addClass('bottom');
            }
          } else {
            if ($example.hasClass('bottom')) {
              $example.removeClass('bottom');
            }
            if (!$example.hasClass('fixed')) {
              return $example.addClass('fixed');
            }
          }
        } else {
          if ($example.hasClass('fixed')) {
            return $example.removeClass('fixed');
          }
        }
      });
      $zone.on('mouseover', function(e) {
        return $square.css({
          '-webkit-animation': _this.animation
        });
      });
      $zone.on('mouseout', function(e) {
        return $square.css({
          '-webkit-animation': 'none'
        });
      });
      $('[contentEditable]').on('mouseover', function(e) {
        var _ref;
        if ((_ref = _this.current) != null) {
          _ref.removeClass('current');
        }
        _this.current = $(e.currentTarget);
        _this.current.addClass('current');
        return _this.setAnimation(e.currentTarget);
      });
      $('[contentEditable]').on('blur', function(e) {
        return _this.setAnimation(e.currentTarget);
      });
      $span = $('.play-pause span');
      $('.btn-play-pause').on('click', function(e) {
        var value;
        value = $(this).data('value');
        return $span.css({
          '-webkit-animation-play-state': value
        });
      });
      audio = document.getElementsByTagName('audio')[0];
      $mouth = $('.mouth');
      $('#syncing-play').on('click', function(e) {
        audio.play();
        $mouth.removeClass('animated');
        return setTimeout(function() {
          return $mouth.addClass('animated');
        }, 0);
      });
    }

    Presentation.prototype.setAnimation = function(elem) {
      var content;
      content = elem.innerHTML;
      content = content.replace('-webkit-animation: ', '');
      content = content.replace(';', '');
      return this.animation = content;
    };

    return Presentation;

  })();

  Number.prototype.range = function(min, max) {
    if (this < min) {
      return min;
    } else if (this > max) {
      return max;
    } else {
      return this;
    }
  };

  new Presentation;

}).call(this);
